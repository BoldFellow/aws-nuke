name: AWS-Nuke Organization Cleanup

# Add necessary permissions for OIDC authentication
permissions:
  id-token: write
  contents: read

on:
  # Scheduled trigger
  schedule:
    - cron: '0 2 * * 6'  # Runs at 2 AM UTC every Saturday
  
  # Manual trigger
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run in dry-run mode'
        type: boolean
        default: true
      target_accounts:
        description: 'Comma-separated list of target account IDs (leave empty for all accounts)'
        type: string
        required: false
      excluded_accounts:
        description: 'Comma-separated list of account IDs to exclude'
        type: string
        required: false
        default: "772886489592"  # Management account

env:
  AWS_REGION: 'us-east-1'

jobs:
  aws-nuke:
    name: Run AWS-Nuke
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up environment variables
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "DRY_RUN=${{ github.event.inputs.dry_run }}" >> $GITHUB_ENV
          else
            echo "DRY_RUN=true" >> $GITHUB_ENV
          fi
          echo "TARGET_ACCOUNTS=${{ github.event.inputs.target_accounts }}" >> $GITHUB_ENV
          echo "EXCLUDED_ACCOUNTS=${{ github.event.inputs.excluded_accounts }}" >> $GITHUB_ENV
          echo "MULTIPLE_PASSES=${{ github.event.inputs.multiple_passes }}" >> $GITHUB_ENV
          echo "PASS_COUNT=${{ github.event.inputs.pass_count }}" >> $GITHUB_ENV
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
          role-session-name: GitHubActionsAWSNuke
      
      - name: Download AWS-Nuke
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/rebuy-de/aws-nuke/releases/latest | jq -r .tag_name)
          curl -sL "https://github.com/rebuy-de/aws-nuke/releases/download/${LATEST_VERSION}/aws-nuke-${LATEST_VERSION}-linux-amd64.tar.gz" | tar xz
          chmod +x ./aws-nuke-${LATEST_VERSION}-linux-amd64
          sudo mv ./aws-nuke-${LATEST_VERSION}-linux-amd64 /usr/local/bin/aws-nuke
      
      - name: Create AWS-Nuke config
        run: |
          # Generate the AWS-Nuke configuration file
          cat > nuke-config.yaml <<EOL
          regions:
            - global
            - us-east-1
          
          account-blocklist:
            - "772886489592"  # Management account
          
          accounts:
          EOL
          
          # Add target accounts to the config
          IFS=',' read -ra ACCOUNT_ARRAY <<< "$TARGET_ACCOUNTS"
          for ACCOUNT in "${ACCOUNT_ARRAY[@]}"; do
            ACCOUNT=$(echo "$ACCOUNT" | tr -d ' \t\n\r')
            if [ -n "$ACCOUNT" ] && [ "$ACCOUNT" != "772886489592" ]; then
              cat >> nuke-config.yaml <<EOL
            "$ACCOUNT":
              filters:
                IAMRole:
                  - "OrganizationAccountAccessRole"
          EOL
            fi
          done
      
      - name: Run AWS-Nuke
        run: |
          ACCOUNTS_TO_NUKE=$(echo "$TARGET_ACCOUNTS" | tr ',' ' ')
          if [ -z "$ACCOUNTS_TO_NUKE" ]; then
            echo "No accounts to process. Exiting."
            exit 0
          fi
          
          if [ "$MULTIPLE_PASSES" == "true" ]; then
            PASSES=$PASS_COUNT
          else
            PASSES=1
          fi
          
          for ACCOUNT_ID in $ACCOUNTS_TO_NUKE; do
            if [ "$ACCOUNT_ID" != "772886489592" ]; then
              echo "Processing account: $ACCOUNT_ID"
              ROLE_ARN="arn:aws:iam::${ACCOUNT_ID}:role/OrganizationAccountAccessRole"
              
              for (( pass=1; pass<=PASSES; pass++ )); do
                echo "Starting Pass $pass of $PASSES for account $ACCOUNT_ID"
                CMD="aws-nuke --config nuke-config.yaml --force --assume-role-arn $ROLE_ARN"
                if [ "$DRY_RUN" == "true" ]; then
                  CMD="$CMD --dry-run"
                fi
                echo "Running command: $CMD"
                $CMD || echo "Failed for account $ACCOUNT_ID on pass $pass"
                if [ $pass -lt $PASSES ]; then
                  echo "Sleeping 30 seconds between passes..."
                  sleep 30
                fi
              done
            else
              echo "Skipping management account $ACCOUNT_ID"
            fi
          done
      
      - name: Report Results
        if: always()
        run: |
          echo "AWS-Nuke execution completed"
          if [ "$DRY_RUN" == "true" ]; then
            echo "Mode: Dry Run"
          else
            echo "Mode: Destructive"
          fi
          echo "Target Accounts: $TARGET_ACCOUNTS"
          echo "Multiple Passes: $MULTIPLE_PASSES (Count: $PASS_COUNT)"